process EcalRecHitsAnalysis  = 
{

   untracked PSet maxEvents = {untracked int32 input = -1}

   include "FWCore/MessageLogger/data/MessageLogger.cfi"

   # input			
     source = PoolSource { 	
       untracked vstring fileNames = {'file:rechits.root'}
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }

  es_source = EcalTrivialConditionRetriever {}	

  #Geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"  

  include "Geometry/CaloEventSetup/data/CaloGeometry.cff"
 
  module ecalRecHitsValidation =  EcalRecHitsValidation {
	string moduleLabelMC   = 'source' 
	string uncalibrecHitProducer     = "ecalWeightUncalibRecHit"
    string EBuncalibrechitCollection = "EcalUncalibRecHitsEB"
    string EEuncalibrechitCollection = "EcalUncalibRecHitsEE"
    string recHitProducer            = "ecalRecHit"
	string ESrecHitProducer          = "ecalPreshowerRecHit"
    string EBrechitCollection        = "EcalRecHitsEB"
    string EErechitCollection        = "EcalRecHitsEE"
    string ESrechitCollection        = "EcalRecHitsES"
    untracked string outputFile      = 'EcalRecHitsValidation.root'
    untracked bool verbose = true
	}

  module ecalBarrelRecHitsValidation =  EcalBarrelRecHitsValidation {
	string digiProducer              = "ecalDigis"
    string EBdigiCollection          = "ebDigis"
	string uncalibrecHitProducer     = "ecalWeightUncalibRecHit"
    string EBuncalibrechitCollection = "EcalUncalibRecHitsEB"
    untracked bool verbose = true
	}

  module ecalEndcapRecHitsValidation =  EcalEndcapRecHitsValidation {
	string digiProducer              = "ecalDigis"
    string EEdigiCollection          = "eeDigis"
	string uncalibrecHitProducer     = "ecalWeightUncalibRecHit"
    string EEuncalibrechitCollection = "EcalUncalibRecHitsEE"
    untracked bool verbose = true
	}

  module ecalPreshowerRecHitsValidation  =  EcalPreshowerRecHitsValidation {
	string uncalibrecHitProducer     = "ecalWeightUncalibRecHit"
    string recHitProducer            = "ecalRecHit"
    string ESrecHitProducer          = "ecalPreshowerRecHit"
    string EErechitCollection        = "EcalRecHitsEE"
	string ESrechitCollection        = "EcalRecHitsES"
    string EEuncalibrechitCollection = "EcalUncalibRecHitsEE"
    untracked bool verbose = true
	}

	path p1 = { ecalRecHitsValidation, ecalBarrelRecHitsValidation, ecalEndcapRecHitsValidation, ecalPreshowerRecHitsValidation }
                                                                               
        service = DaqMonitorROOTBackEnd{ }

}		
