process EcalRecHitsAnalysis  = 
{
  service = MessageLogger 
   { 
     untracked vstring destinations = {"cerr", "cout"}
     PSet cerr                      = { string threshold = "WARNING" }
     PSet cout                      = { string threshold = "INFO"    }
                                                                     
     untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
     vstring categories = { "FwkJob" }
     PSet FrameworkJobReport.xml = {
                                 PSet default = { int32 limit = 0 }
                                 PSet FwkJob = { int32 limit = 10000000 }
        	                   }
   } 	

   # input			
     source = PoolSource { 	
       untracked vstring fileNames = {'file:/data/crovelli/valid/rechits.root'}
       untracked int32 maxEvents = -1
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }


  #Geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"  

        es_module = EcalBarrelGeometryEP {}        
        es_module = EcalEndcapGeometryEP {}        
        es_module = EcalPreshowerGeometryEP {}        
        es_module = HcalHardcodeGeometryEP {}      
        es_module = CaloTowerHardcodeGeometryEP {} 
        es_module = CaloGeometryBuilder {}         
 
  module ecalRecHitsValidation =  EcalRecHitsValidation {
        untracked string moduleLabelMC  = 'FlatRandomEGunSource' 
	string uncalibrecHitProducer     = "ecaluncalibrechit"
        string EBuncalibrechitCollection = "EcalUncalibRecHitsEB"
        string EEuncalibrechitCollection = "EcalUncalibRecHitsEE"
        string recHitProducer     = "ecalrechit"
	string ESrecHitProducer   = "esrechit"
        string EBrechitCollection = "EcalRecHitsEB"
        string EErechitCollection = "EcalRecHitsEE"
        string ESrechitCollection = "EcalRecHitsES"
        untracked string outputFile = 'EcalRecHitsValidation.root'
        untracked bool verbose = true
	}

  module ecalBarrelRecHitsValidation =  EcalBarrelRecHitsValidation {
	string uncalibrecHitProducer     = "ecaluncalibrechit"
        string EBuncalibrechitCollection = "EcalUncalibRecHitsEB"
        untracked bool verbose = true
	}

  module ecalEndcapRecHitsValidation =  EcalEndcapRecHitsValidation {
	string uncalibrecHitProducer     = "ecaluncalibrechit"
        string EEuncalibrechitCollection = "EcalUncalibRecHitsEE"
        untracked bool verbose = true
	}

  module ecalPreshowerRecHitsValidation =  EcalPreshowerRecHitsValidation {
        string ESrecHitProducer   = "esrechit"
	string ESrechitCollection = "EcalRecHitsES"
        untracked bool verbose = true
	}

	path p1 = { ecalRecHitsValidation, ecalBarrelRecHitsValidation, ecalEndcapRecHitsValidation, ecalPreshowerRecHitsValidation }
                                                                               
        service = DaqMonitorROOTBackEnd{ }

}		
