process EcalHitsValid  = 
	{
    source = PoolSource {
         #
	 #  Note for Xingtao :
	 # this "/store/..." thing below shows how to read from 
	 # dCache the newly regenerated Photon30GeV_all sample;
	 #
	 # Remember : this only works if one runs in b-shell !!!
	 #
	 # the full path to the new photon sample is this :
	 # /pnfs/cms/WAX/11/store/unmerged/PreProd/2006/10/3/SVSuite100-EcalHits-Photon30GeVAll-GenEvents/GEN/0000/48E9CC58-2853-DB11-969D-003048767D3D.root
	 # you can also copy it overm using dccp, from dCache  
	 # to your work area and use locally
	 #
	 # untracked vstring fileNames = 
	 # {"/store/unmerged/PreProd/2006/10/3/SVSuite100-EcalHits-Photon30GeVAll-GenEvents/GEN/0000/48E9CC58-2853-DB11-969D-003048767D3D.root"}
	 #
         untracked vstring fileNames = {'file:Pion_Pt60GeV_all.root'}
         #untracked string catalog = 'PoolFileCatalog.xml'
         untracked int32 maxEvents= 2000
    }
     
  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"   

  # initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # geometry (Only Ecal)
  include "Geometry/EcalCommonData/data/EcalOnly.cfi"

  es_module = TrackerGeometricDetESModule {}
   
  module USER = PoolOutputModule { 
         untracked string fileName = "Pion_Pt60GeV_all_EcalValidation.root"      
         untracked vstring outputCommands = 
         {  
           "keep *",
           "drop *_ecalUnsuppressedDigis_*_*",
           "drop *_ecalDigis_*_*",
           "drop *_ecalPreshowerDigis_*_*",
           "drop *_ecalRecHit_*_*",
           "drop *_ecalPreshowerRecHit_*_*" 
         }

  }
                                                                                
  # DQM services
  service = DaqMonitorROOTBackEnd{ }

    service = RandomNumberGeneratorService
    {
        PSet moduleSeeds =
        {
            untracked uint32 g4SimHits = 9876
        }
    }

  service = Timing{ }
  
  service = SimpleMemoryCheck{ }

  include "SimGeneral/HepPDTESSource/data/pdt.cfi"

  # run simulation, with EcalHits Validation specific watcher 
  include "SimG4Core/Application/data/SimG4Object.cfi"
  replace g4SimHits.Generator.HepMCProductLabel = "source"
  replace g4SimHits.Watchers = {
       { string type = "EcalSimHitsValidProducer"
         untracked string instanceLabel="EcalValidInfo"
         untracked bool verbose = false
       }
  }
		
  # Mixing Module
  include "SimGeneral/MixingModule/data/mixNoPU.cfi"

  include "CalibCalorimetry/Configuration/data/Ecal_FakeConditions.cff"

  # ECAL digitization sequence
  include "SimCalorimetry/EcalSimProducers/data/ecalDigiSequence.cff" 

  # ECAL digis validation sequence
  include "Validation/EcalDigis/data/ecalDigisValidationSequence.cff"

  # ECAL LocalReco sequence 
  include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"       

  # ECAL rechits validation sequence
  include "Validation/EcalRecHits/data/ecalRecHitsValidationSequence.cff"

  sequence digis = { ecalDigiSequence , ecalDigisValidationSequence }
  sequence rechits = { ecalLocalRecoSequence , ecalRecHitsValidationSequence }

  path p1 = { g4SimHits , mix , digis , rechits }

  endpath outpath = { USER }

  }		
